[tox]
requires =
    tox>=4.2
env_list =
    linters
    unit

[testenv]
description = Run all tests with {basepython}
package = editable
deps =
    -r {toxinidir}/test/requirements.txt
commands =
    pytest -n auto {posargs}

[testenv:linters{,-py39,-py310,-py311}]
description = Run code linters
commands =
    flake8 --version
    flake8 src/ansible_builder test
    yamllint --version
    yamllint -s .
    mypy src/ansible_builder

[testenv:unit{,-py39,-py310,-py311}]
description = Run unit tests
commands =
    pytest -n auto test/unit {posargs} {[shared]pytest_cov_args}

[testenv:pulp-integration{-py39,-py310,-py311}]
description = Run pulp integration tests
commands =
    pytest -n auto -m "not serial" test/pulp_integration {posargs} {[shared]pytest_cov_args}
    pytest -n 0 -m "serial" test/pulp_integration {posargs} {[shared]pytest_cov_args}

[testenv:integration{,-py39,-py310,-py311}]
description = Run integration tests
pass_env =
    HOME
    KEEP_IMAGES
commands =
    pytest -n auto -m "not serial" test/integration {posargs} {[shared]pytest_cov_args}
    pytest -n 0 -m "serial" test/integration {posargs} {[shared]pytest_cov_args}

[testenv:docs]
description = Build documentation
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -T -E -W -n --keep-going {tty:--color} -j auto -d docs/build/doctrees -b html docs docs/build/html

[testenv:clean]
description = Erase docs and coverage artifacts
skip_install = true
deps =
commands =
    /bin/sh -c "rm -rf {toxinidir}/test/coverage/*"
    /bin/sh -c "rm -rf {toxinidir}/docs/{_,}build"
allow_external = /bin/sh

[shared]
pytest_cov_args = --cov --cov-report html --cov-report term --cov-report xml
